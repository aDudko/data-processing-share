<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.2</version>
		<relativePath/>
	</parent>

	<groupId>org.adudko.service</groupId>
	<artifactId>data-processing</artifactId>
	<version>0.0.1</version>
	<packaging>pom</packaging>

	<modules>
		<module>common</module>

		<module>config-server</module>
		<module>discovery-service</module>
		<module>gateway-service</module>

		<module>kafka/kafka-model</module>
		<module>kafka/kafka-admin</module>
		<module>kafka/kafka-producer</module>
		<module>kafka/kafka-consumer</module>
		<module>elastic</module>
		<module>app-config-data</module>

		<module>source-to-kafka-service</module>
		<module>kafka-to-elastic-service</module>

		<module>elastic-query-service</module>
		<module>reactive-elastic-query-service</module>

		<module>elastic-query-web-client</module>
		<module>elastic-query-web-client-2</module>
		<module>reactive-elastic-query-web-client</module>

		<module>kafka-streams-service</module>
		<module>analytics-service</module>
		<module>mapped-diagnostic-context</module>
	</modules>

	<properties>
		<!-- Spring -->
		<spring-boot.version>3.1.2</spring-boot.version>
		<spring-kafka.version>3.0.9</spring-kafka.version>
		<spring-retry.version>2.0.2</spring-retry.version>
		<!-- Kafka -->
		<kafka-avro-serializer.version>7.4.0</kafka-avro-serializer.version>
		<avro.version>1.11.2</avro.version>
		<kafka-streams.version>3.5.1</kafka-streams.version>
		<kafka-clients.version>3.5.1</kafka-clients.version>
		<kafka-streams-avro-serde.version>7.4.0</kafka-streams-avro-serde.version>
		<!-- Elastic -->
		<elastic.version>7.17.4</elastic.version>
		<!-- Spring Cloud -->
		<spring-cloud.version>4.0.3</spring-cloud.version>
		<spring-cloud-dependencies.version>2022.0.4</spring-cloud-dependencies.version>
		<resilience4j.version>3.0.3</resilience4j.version>
		<!-- Tracing and Monitoring -->
		<micrometer-registry-prometheus.version>1.11.3</micrometer-registry-prometheus.version>
		<logstash-logback-encoder.version>7.4</logstash-logback-encoder.version>
		<zipkin.version>2.2.8.RELEASE</zipkin.version>
		<!-- Mocks for Demo -->
		<twitter4j.version>4.0.7</twitter4j.version>
		<!-- API Docs -->
		<springdoc-openapi-ui.version>1.5.9</springdoc-openapi-ui.version>
		<!-- boilerplate code -->
		<lombok.version>1.18.34</lombok.version>
		<!-- interpretation -->
		<java.version>17</java.version>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- maven plugins -->
		<maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
			<version>${lombok.version}</version>
		</dependency>
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-brave</artifactId>
		</dependency>
		<dependency>
			<groupId>io.zipkin.reporter2</groupId>
			<artifactId>zipkin-reporter-brave</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- LOCAL -->
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>mapped-diagnostic-context</artifactId>
				<version>${project.version}</version>
			</dependency>
				<!-- config -->
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>app-config-data</artifactId>
				<version>${project.version}</version>
			</dependency>
				<!-- common -->
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>common-config</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>common-query-service</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>common-query-web-client</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>common-utils</artifactId>
				<version>${project.version}</version>
			</dependency>
				<!-- kafka -->
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>kafka-model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>kafka-admin</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>kafka-producer</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>kafka-consumer</artifactId>
				<version>${project.version}</version>
			</dependency>
				<!-- elastic -->
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>elastic-config</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>elastic-index-client</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>elastic-model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.adudko.service</groupId>
				<artifactId>elastic-query-client</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- SPRING FRAMEWORK -->
			<dependency>
				<groupId>org.springframework.retry</groupId>
				<artifactId>spring-retry</artifactId>
				<version>${spring-retry.version}</version>
			</dependency>
				<!-- spring boot -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-webflux</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-redis-reactive</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
				<!-- spring cloud -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-config</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-gateway</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-config-server</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-loadbalancer</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
				<version>${resilience4j.version}</version>
			</dependency>
			<!-- Security -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<!-- KAFKA -->
			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>${spring-kafka.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka-clients.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-streams</artifactId>
				<version>${kafka-streams.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro</artifactId>
				<version>${avro.version}</version>
			</dependency>
			<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-avro-serializer</artifactId>
				<version>${kafka-avro-serializer.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-annotations</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-streams-avro-serde</artifactId>
				<version>${kafka-streams-avro-serde.version}</version>
			</dependency>
			<!-- ELASTIC -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elastic.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-high-level-client</artifactId>
				<version>${elastic.version}</version>
			</dependency>
			<!-- Monitoring and Tracing -->
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-prometheus</artifactId>
				<version>${micrometer-registry-prometheus.version}</version>
			</dependency>
			<dependency>
				<groupId>net.logstash.logback</groupId>
				<artifactId>logstash-logback-encoder</artifactId>
				<version>${logstash-logback-encoder.version}</version>
			</dependency>
			<!-- Database -->
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>
			<!-- Auto Tests -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Mock Services -->
			<dependency>
				<groupId>org.twitter4j</groupId>
				<artifactId>twitter4j-stream</artifactId>
				<version>${twitter4j.version}</version>
			</dependency>
			<!-- Documentation -->
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>${springdoc-openapi-ui.version}</version>
			</dependency>
			<!-- Other -->
			<dependency>
				<groupId>jakarta.annotation</groupId>
				<artifactId>jakarta.annotation-api</artifactId>
				<version>2.1.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.13</version>
			</dependency>
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>20220320</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository> <!-- For dependency Kafka Avro Serializer -->
			<id>confluent</id>
			<url>https://packages.confluent.io/maven/</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<release>17</release>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
